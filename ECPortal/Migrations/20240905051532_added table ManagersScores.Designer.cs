// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pk.Com.Jazz.ECP.Data;

#nullable disable

namespace Pk.Com.Jazz.ECP.Migrations
{
    [DbContext(typeof(ECContext))]
    [Migration("20240905051532_added table ManagersScores")]
    partial class addedtableManagersScores
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Data.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("isEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Data.ManagersScores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentSatisfaction")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FatalError")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MSPercentage")
                        .HasColumnType("int");

                    b.Property<int>("MSTarget")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MysteryShopping")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuizDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuizOnline")
                        .HasColumnType("int");

                    b.Property<int>("QuizPercentage")
                        .HasColumnType("int");

                    b.Property<int>("QuizTarget")
                        .HasColumnType("int");

                    b.Property<int>("RamPercentage")
                        .HasColumnType("int");

                    b.Property<int>("RamTarget")
                        .HasColumnType("int");

                    b.Property<int>("ResponsesCount")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("asPercentage")
                        .HasColumnType("int");

                    b.Property<int>("asTarget")
                        .HasColumnType("int");

                    b.Property<int>("visitSatisfaction")
                        .HasColumnType("int");

                    b.Property<int>("vsPercentage")
                        .HasColumnType("int");

                    b.Property<int>("vsTarget")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ManagersScores");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.AppUserToken", b =>
                {
                    b.Property<int>("AppUserTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppUserTokenId"));

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserAdLogin")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("AppUserTokenId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EC", b =>
                {
                    b.Property<int>("ECID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ECID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ECRegionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperationalStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhysicalAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ECID");

                    b.HasIndex("ECRegionID");

                    b.ToTable("ECs");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECAudits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Actions")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditedArea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Auditor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ECID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Findings")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ECID");

                    b.ToTable("ECAudits");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECDeviceSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Handsets")
                        .HasColumnType("int");

                    b.Property<int>("MBB")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ECDeviceSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECFourGSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ECFourGSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECGiveaways", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ECID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("GiveawayItem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ECID");

                    b.ToTable("ECGiveaways");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECMWalletSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ECMWalletSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECPostpaidSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FreshSales")
                        .HasColumnType("int");

                    b.Property<int>("PortIN")
                        .HasColumnType("int");

                    b.Property<int>("PreToPost")
                        .HasColumnType("int");

                    b.Property<int>("RedRedZ")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ECPostpaidSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECPrepaidSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NewSales")
                        .HasColumnType("int");

                    b.Property<int>("PrepaidMNP")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ECPrepaidSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECRegions", b =>
                {
                    b.Property<int>("ECRegionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ECRegionID"));

                    b.Property<string>("ECParentRegionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ECRegionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ECRegionID");

                    b.ToTable("ECRegions");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECRoxConversionSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasicVibe")
                        .HasColumnType("int");

                    b.Property<int>("CrazyVibe")
                        .HasColumnType("int");

                    b.Property<int>("InsaneVibe")
                        .HasColumnType("int");

                    b.Property<int>("NoVibe")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ECRoxConversionSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECRoxNewSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasicVibe")
                        .HasColumnType("int");

                    b.Property<int>("Boost")
                        .HasColumnType("int");

                    b.Property<int>("CrazyVibe")
                        .HasColumnType("int");

                    b.Property<int>("InsaneVibe")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ECRoxNewSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECSales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ECDeviceSaleId")
                        .HasColumnType("int");

                    b.Property<int>("ECFourGSaleId")
                        .HasColumnType("int");

                    b.Property<int>("ECID")
                        .HasColumnType("int");

                    b.Property<int>("ECMWalletSaleId")
                        .HasColumnType("int");

                    b.Property<int>("ECPostpaidSaleId")
                        .HasColumnType("int");

                    b.Property<int>("ECPrepaidSaleId")
                        .HasColumnType("int");

                    b.Property<int>("ECRoxConversionSaleId")
                        .HasColumnType("int");

                    b.Property<int>("ECRoxNewSaleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ECDeviceSaleId");

                    b.HasIndex("ECFourGSaleId");

                    b.HasIndex("ECID");

                    b.HasIndex("ECMWalletSaleId");

                    b.HasIndex("ECPostpaidSaleId");

                    b.HasIndex("ECPrepaidSaleId");

                    b.HasIndex("ECRoxConversionSaleId");

                    b.HasIndex("ECRoxNewSaleId");

                    b.ToTable("ECSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECStocks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ECID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ECID");

                    b.ToTable("ECStocks");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECTNA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ECID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ECID");

                    b.ToTable("ECTNAs");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECTargets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ECDeviceSaleTarget")
                        .HasColumnType("int");

                    b.Property<int>("ECFourGSaleTarget")
                        .HasColumnType("int");

                    b.Property<int>("ECID")
                        .HasColumnType("int")
                        .HasColumnName("ECID");

                    b.Property<int>("ECMWalletSaleTarget")
                        .HasColumnType("int");

                    b.Property<int>("ECPostpaidSaleTarget")
                        .HasColumnType("int");

                    b.Property<int>("ECPrepaidSaleTarget")
                        .HasColumnType("int");

                    b.Property<int>("ECRoxConversionSaleTarget")
                        .HasColumnType("int");

                    b.Property<int>("ECRoxNewSaleTarget")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ECID");

                    b.ToTable("ECTargets");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CNIC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DOJ")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DateOfJoiningBC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DateOfLeaving")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeviceIMIE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ECID")
                        .HasColumnType("int");

                    b.Property<string>("EditBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EficsId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EficsId2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HODID")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<int?>("ManagerID")
                        .HasColumnType("int");

                    b.Property<string>("MfsId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PosIds")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PosName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("QmaticLogin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QmaticPowerLogin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RCCHID")
                        .HasColumnType("int");

                    b.Property<int>("RegionID")
                        .HasColumnType("int");

                    b.Property<string>("SalesId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SiebelId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TLID")
                        .HasColumnType("int");

                    b.Property<string>("TabsId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserAdLogin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WaridSalesId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ECID");

                    b.HasIndex("EmployeeNumber")
                        .IsUnique();

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeCommission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CommissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeCommissions");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeDeviceSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Handsets")
                        .HasColumnType("int");

                    b.Property<int>("MBB")
                        .HasColumnType("int");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmployeeDeviceSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeEDA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EDAEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EDAName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EDAStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeEDAs");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FeedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProvidedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeFeedbacks");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeFourGSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmployeeFourGSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeMWalletSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmployeeMWalletSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeePerformance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PerformanceEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PerformanceScore")
                        .HasColumnType("int");

                    b.Property<DateTime>("PerformanceStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeePerformances");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeePostpaidSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FreshSales")
                        .HasColumnType("int");

                    b.Property<int>("PortIN")
                        .HasColumnType("int");

                    b.Property<int>("PreToPost")
                        .HasColumnType("int");

                    b.Property<int>("RedRedZ")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmployeePostpaidSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeePrepaidSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NewSales")
                        .HasColumnType("int");

                    b.Property<int>("PrepaidMNP")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmployeePrepaidSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeRecognition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RecognitionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecognitionDetail")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RecognitionType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RecognizedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeRecognitions");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeRoxConversionSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasicVibe")
                        .HasColumnType("int");

                    b.Property<int>("CrazyVibe")
                        .HasColumnType("int");

                    b.Property<int>("InsaneVibe")
                        .HasColumnType("int");

                    b.Property<int>("NoVibe")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmployeeRoxConversionSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeRoxNewSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasicVibe")
                        .HasColumnType("int");

                    b.Property<int>("Boost")
                        .HasColumnType("int");

                    b.Property<int>("CrazyVibe")
                        .HasColumnType("int");

                    b.Property<int>("InsaneVibe")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmployeeRoxNewSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeSales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeDeviceSaleId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeFourGSaleId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeMWalletSaleId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<int>("EmployeePostpaidSaleId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeePrepaidSaleId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeRoxConversionSaleId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeRoxNewSaleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDeviceSaleId");

                    b.HasIndex("EmployeeFourGSaleId");

                    b.HasIndex("EmployeeMWalletSaleId");

                    b.HasIndex("EmployeeNumber");

                    b.HasIndex("EmployeePostpaidSaleId");

                    b.HasIndex("EmployeePrepaidSaleId");

                    b.HasIndex("EmployeeRoxConversionSaleId");

                    b.HasIndex("EmployeeRoxNewSaleId");

                    b.ToTable("EmployeeSales");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeTargets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeDeviceSaleTarget")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeFourGSaleTarget")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeMWalletSaleTarget")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeNumber");

                    b.Property<int>("EmployeePostpaidSaleTarget")
                        .HasColumnType("int");

                    b.Property<int>("EmployeePrepaidSaleTarget")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeRoxConversionSaleTarget")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeRoxNewSaleTarget")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNumber");

                    b.ToTable("EmployeeTargets");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeTrainings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TrainingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeTrainings");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.QualityScores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EID");

                    b.ToTable("QualityScores");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.QuizScores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentSatisfaction")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FatalError")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("QuizDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuizOnline")
                        .HasColumnType("int");

                    b.Property<int>("QuizPercentage")
                        .HasColumnType("int");

                    b.Property<int>("QuizTarget")
                        .HasColumnType("int");

                    b.Property<int>("RamPercentage")
                        .HasColumnType("int");

                    b.Property<int>("RamTarget")
                        .HasColumnType("int");

                    b.Property<int>("ResponsesCount")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("asPercentage")
                        .HasColumnType("int");

                    b.Property<int>("asTarget")
                        .HasColumnType("int");

                    b.Property<int>("visitSatisfaction")
                        .HasColumnType("int");

                    b.Property<int>("vsPercentage")
                        .HasColumnType("int");

                    b.Property<int>("vsTarget")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("QuizScores");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.TrainingRequests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TrainingRequests");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Data.ManagersScores", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EC", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.ECRegions", "ECRegion")
                        .WithMany("ECs")
                        .HasForeignKey("ECRegionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ECRegion");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECAudits", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.EC", "EC")
                        .WithMany("ECAudits")
                        .HasForeignKey("ECID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EC");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECGiveaways", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.EC", null)
                        .WithMany("ECGiveaways")
                        .HasForeignKey("ECID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECSales", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.ECDeviceSale", "ECDeviceSale")
                        .WithMany()
                        .HasForeignKey("ECDeviceSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.ECFourGSale", "ECFourGSale")
                        .WithMany()
                        .HasForeignKey("ECFourGSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.EC", "EC")
                        .WithMany()
                        .HasForeignKey("ECID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.ECMWalletSale", "ECMWalletSale")
                        .WithMany()
                        .HasForeignKey("ECMWalletSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.ECPostpaidSale", "ECPostpaidSale")
                        .WithMany()
                        .HasForeignKey("ECPostpaidSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.ECPrepaidSale", "ECPrepaidSale")
                        .WithMany()
                        .HasForeignKey("ECPrepaidSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.ECRoxConversionSale", "ECRoxConversionSale")
                        .WithMany()
                        .HasForeignKey("ECRoxConversionSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.ECRoxNewSale", "ECRoxNewSale")
                        .WithMany()
                        .HasForeignKey("ECRoxNewSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EC");

                    b.Navigation("ECDeviceSale");

                    b.Navigation("ECFourGSale");

                    b.Navigation("ECMWalletSale");

                    b.Navigation("ECPostpaidSale");

                    b.Navigation("ECPrepaidSale");

                    b.Navigation("ECRoxConversionSale");

                    b.Navigation("ECRoxNewSale");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECStocks", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.EC", null)
                        .WithMany("ECStocks")
                        .HasForeignKey("ECID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECTNA", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.EC", "EC")
                        .WithMany("ECTNAs")
                        .HasForeignKey("ECID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EC");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECTargets", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.EC", "EC")
                        .WithMany()
                        .HasForeignKey("ECID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EC");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.Employee", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Data.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("Pk.Com.Jazz.ECP.Models.EC", "ExperienceCenter")
                        .WithMany("Employees")
                        .HasForeignKey("ECID");

                    b.Navigation("AppUser");

                    b.Navigation("ExperienceCenter");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeCommission", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.Employee", "Employee")
                        .WithMany("EmployeeCommissions")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeEDA", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.Employee", "Employee")
                        .WithMany("EmployeeEDAs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeFeedback", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.Employee", null)
                        .WithMany("EmployeeFeedbacks")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeePerformance", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.Employee", "Employee")
                        .WithMany("EmployeePerformances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeRecognition", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.Employee", "Employee")
                        .WithMany("EmployeeRecognitions")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeSales", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.EmployeeDeviceSale", "EmployeeDeviceSale")
                        .WithMany()
                        .HasForeignKey("EmployeeDeviceSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.EmployeeFourGSale", "EmployeeFourGSale")
                        .WithMany()
                        .HasForeignKey("EmployeeFourGSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.EmployeeMWalletSale", "EmployeeMWalletSale")
                        .WithMany()
                        .HasForeignKey("EmployeeMWalletSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.Employee", "Employee")
                        .WithMany("EmployeeSales")
                        .HasForeignKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.EmployeePostpaidSale", "EmployeePostpaidSale")
                        .WithMany()
                        .HasForeignKey("EmployeePostpaidSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.EmployeePrepaidSale", "EmployeePrepaidSale")
                        .WithMany()
                        .HasForeignKey("EmployeePrepaidSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.EmployeeRoxConversionSale", "EmployeeRoxConversionSale")
                        .WithMany()
                        .HasForeignKey("EmployeeRoxConversionSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pk.Com.Jazz.ECP.Models.EmployeeRoxNewSale", "EmployeeRoxNewSale")
                        .WithMany()
                        .HasForeignKey("EmployeeRoxNewSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EmployeeDeviceSale");

                    b.Navigation("EmployeeFourGSale");

                    b.Navigation("EmployeeMWalletSale");

                    b.Navigation("EmployeePostpaidSale");

                    b.Navigation("EmployeePrepaidSale");

                    b.Navigation("EmployeeRoxConversionSale");

                    b.Navigation("EmployeeRoxNewSale");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeTargets", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.Employee", "Employee")
                        .WithMany("EmployeeTargets")
                        .HasForeignKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EmployeeTrainings", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.Employee", "Employee")
                        .WithMany("EmployeeTrainings")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.QualityScores", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.Employee", "Employee")
                        .WithMany("QualityScores")
                        .HasForeignKey("EID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.QuizScores", b =>
                {
                    b.HasOne("Pk.Com.Jazz.ECP.Models.Employee", "Employee")
                        .WithMany("QuizScores")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.EC", b =>
                {
                    b.Navigation("ECAudits");

                    b.Navigation("ECGiveaways");

                    b.Navigation("ECStocks");

                    b.Navigation("ECTNAs");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.ECRegions", b =>
                {
                    b.Navigation("ECs");
                });

            modelBuilder.Entity("Pk.Com.Jazz.ECP.Models.Employee", b =>
                {
                    b.Navigation("EmployeeCommissions");

                    b.Navigation("EmployeeEDAs");

                    b.Navigation("EmployeeFeedbacks");

                    b.Navigation("EmployeePerformances");

                    b.Navigation("EmployeeRecognitions");

                    b.Navigation("EmployeeSales");

                    b.Navigation("EmployeeTargets");

                    b.Navigation("EmployeeTrainings");

                    b.Navigation("QualityScores");

                    b.Navigation("QuizScores");
                });
#pragma warning restore 612, 618
        }
    }
}
